

type LeadershipHistory {
  id: String
  studentName: String
  position: Position
  session: Session
  department: Department
  level: String
  studentImage: String
  departments: [Session]
}

enum LeadershipLevel {
  FACULTY
  DEPARTMENT
}

type Query {
  departmentPresidents(sessionId: String!): [LeadershipHistory]
  searchOfficials(name: String!): [LeadershipHistory]
  departmentPresidentAndVicePresident(sessionId: String!, departmentId: String!): [LeadershipHistory]
  departmentOfficials(sessionId: String!, departmentId: String!): [LeadershipHistory]
}

type Mutation {
  createHistory(studentName: String!, sessionId: String!, departmentId: String!, positionId: String!, level: LeadershipLevel!, studentImage: String!): LeadershipHistory
}